Beta 0.4.3.9

Fixed: Bolt will no longer call methods on disabled scripts
Fixed: Bolt will now default to the new Zeus development master server
Fixed: A couple of entity settings were missing from the new UI, they are now back
Fixed: Spelling error in the bolt settings window
Fixed: Bolt will now automatically save the current scene when you click  "edit" in Bolt Scenes

Added: You can now select replication mode + mecanim mode when importing a mecanim state
Added: Added .isControllerOrOwner to BoltEntity

Removed: Removed the .mdb files

Beta 0.4.3.8
Changed: Improved the performance of SetDynamic and GetDynamic substantially.
Changed: Added proper error reporting to SetDynamic if property queried for does not exist.
Changed: Deprecated NetworkTransform.SetTransforms, see: IState.SetTransforms and NetworkTransform.ChangeTransforms.
Changed: Any errors thrown inside Bolt will now always be logged to unitys Debug.LogException no matter if Bolt is in debug mode or if you have 'Unity' logging enbled in Bolt.
Changed: BoltNetwork.Destroy can now be used when Bolt is not running, it will simply destroy the object normally using Unity's GameObject.Destroy.

Added: TrySetDynamic and TryGetDynamic that does not log errors if properties dont exists, but instead return a bool true/false.
Added: Added IState.SetTransforms to replace NetworkTransform.SetTransforms, this new methods works around the issue of position snapping for entities when their position updates are delayed.
Added: NetworkTransform.ChangeTransform to replace the previous NetworkTransform.SetTransforms for changing the transform target for interpolation after it's been set once.
Added: IState.ForceTransform that lets you over-write all currently received position and rotation values of a transform completely, this is usefull for working around issue #242 when loosing control of an entity and its position will snap back, you can now force it to stay at the correct location in world until proper position updates arrive.
Added: Bolt.EntityTargets.OnlyControllerAndOwner event target.
Added: BoltEntity.isControlled property.
Added: BoltEntityExtensions which contains extensions method for IsAttached, IsOwner, IsControlled, IsSceneObject, IsFrozen and HasControl the methods properly handle the case where Bolt is not running, the entity is null or detached without throwing exceptions.

Fixed: GitHub Issue #224 (see: IState.SetTransforms, NetworkTransform.ChangeTransform)
Fixed: GitHub Issue #243
Fixed: GitHub Issue #259

Beta 0.4.3.7

Fixed: Issue causing servers to disconnect from Zeus after a specific interval was resolved.

Beta 0.4.3.6

Added: Bolt Release build to the package. It's a unitypackage in Assets\bolt-release folder. If you want only the release build, please unpack into an empty project and then import the .unitypackage where needed.
Note: This version is just a re-packaging of 0.4.3.5 to add the Release build. No new features. 

Beta 0.4.3.5

Fixed: Entities getting frozen on clients after 10 seconds.
Fixed: Int compression not being applied.
Fixed: Delay on Zeus session list request after re-connecting.
Fixed: ZeusDisconnected callback not being invoked if Zeus times out. 

Beta 0.4.3.4

Fixed: Issue with setting Animator to null causing crashes.
Fixed: Issue with array properties not properly checking if the value actually changed before flagging a value for re-sending.
Fixed: Issue with entity inspector not showing debug values.
Fixed: Some smaller performance issues related to garbage generated in various places in code.

Improved the performance of the initial scene object search algorithm. 

Beta 0.4.3.3

Fixed: Entity event unreliability issues where too many events would get discarded.
Fixed: Debug Start will now respect 64 bit windows build settings.
Fixed: Control of an entity will now be handed over properly in all circumstances.
Fixed: ‘Proxy When Frozen’ should now work properly.
Fixed: RemoveCallback will now work properly. 

Added: New settings on the Bolt Entity component called ‘Detach Parent On Disconnect’ which if enabled automatically finds nested entities and de-parents them when the parent is detached.
Added: New overloads to BoltLauncher.StartServer which takes a scene name as last parameter for a scene that will automatically loaded when server has started.
Added: New method called BoltNetwork.PreLoadPrefabDb() which can be called as soon as the game starts to limit the lag spike that happens when starting Bolt. 

Beta 0.4.3.1

Added: Bolt.IEntityReplicationFilter that allows you direct boolean control over if an entity should be written into a packet or not.
Added: Added the ability to pick between local and world transform replication.
Added: You can now create IProtocolToken properties on events.
Added: Added WriteBoltEntity and ReadBoltEntity extension methods for UdpPacket to easily write/read BoltEntity objects in IProtocolToken Read/Write method.
Added: Added support for Matrix4x4, Color32 and GUID properties.
Added: Two new Global callbacks exist EntityFrozen and EntityThawed for handling entities being frozen/thawed on a global level. 

Fixed: Disconnect tokens are now available on the BoltConnection object.
Fixed: ProtocolToken passed into BoltNetwork.Attached is not replaced by null by mistake anymore.
Fixed: Resolved interpolation issues for properties on Commands.
Fixed: The issues with connecting through Zeus should be solved.
Fixed: Resolved several issues in related to nesting Bolt entities during run-time and Bolt callback methods such as Attached, etc.
Fixed: BoltPhysicsHit now contains the approximate distance between the hitbox and sphere overlap origin instead of -Infinity. 

Changed: Changed the way priority is accumulated for entities to give smoother data delivery.
Changed: Changed the editor layout of the ‘Bolt Entity’ script on game objects.
